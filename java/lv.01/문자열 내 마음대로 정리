문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다.
예를 들어 strings가 ["sun", "bed", "car"]이고 n이 1이면 각 단어의 인덱스 1의 문자 "u", "e", "a"로 strings를 정렬합니다.
----------------------------------------------------
import java.util.*;
class Solution {
    public String[] solution(String[] strings, int n) {
        String[] answer = new String[strings.length];
        
        Arrays.sort(strings); // 사전식 배열 먼저하기
        // [bed, car, sun] [abcd, abce, cdx] j
        String[] strN = new String[strings.length];
        
        for(int i=0; i<strN.length; i++){
            strN[i] = Character.toString(strings[i].charAt(n));
        } // [e, a, u] [c, c, x]
        Arrays.sort(strN); // [a, e, u] [c, c, x] j

        for(int i=0; i<strings.length; i++){ // c -> abcd c -> abce x -> cdx
            for(int j=0; j<strN.length; j++){
                if(Character.toString(strings[i].charAt(n)).equals(strN[j])){
                    strN[j] = strings[i];
                    break;
                }
            }
        }
        answer = strN;
        return answer;
    }
}
-------------------------------------------------
import java.util.*;

class Solution {
    public String[] solution(String[] strings, int n) {
        String[] answer = {};
        ArrayList<String> arr = new ArrayList<>();
        for (int i = 0; i < strings.length; i++) {
            arr.add("" + strings[i].charAt(n) + strings[i]);
        }
        Collections.sort(arr);
        answer = new String[arr.size()];
        for (int i = 0; i < arr.size(); i++) {
            answer[i] = arr.get(i).substring(1, arr.get(i).length());
        }
        return answer;
    }
}
