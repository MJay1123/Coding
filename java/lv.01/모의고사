수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.

1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...
2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...
3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...

1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
class Solution {
    public List<Integer> solution(int[] answers) {
        int[] score = {0,0,0};
        for(int i=0; i<answers.length; i++){
            if(answers[i] == person1(i+1)){
                score[0]++;
            }
            if(answers[i] == person2(i+1)){
                score[1]++;
            }
            if(answers[i] == person3(i+1)){
                score[2]++;
            }
        }
        
        int max = Math.max(Math.max(score[0], score[1]), score[2]);
        List<Integer> answer = new ArrayList<>();
        for(int i=0; i<score.length; i++){
            if(score[i] == max){
                answer.add(i+1);
            }
        }
        return answer;
    }
    private static int person1(int num){
        return ((num-1) % 5) + 1;
    }
    private static int person2(int num){
        if(num % 2 == 1){
            return 2;
        } else {
            int[] array = {1,3,4,5};
            return array[(num/2-1) % 4];
        }
    }
    private static int person3(int num){
        int[] array = {3,1,2,4,5};
        return array[((num-1) % 10) / 2];
    }
}
