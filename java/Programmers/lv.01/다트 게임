다트 게임
카카오톡에 뜬 네 번째 별! 심심할 땐? 카카오톡 게임별~

Game Star

카카오톡 게임별의 하반기 신규 서비스로 다트 게임을 출시하기로 했다. 다트 게임은 다트판에 다트를 세 차례 던져 그 점수의 합계로 실력을 겨루는 게임으로, 모두가 간단히 즐길 수 있다.
갓 입사한 무지는 코딩 실력을 인정받아 게임의 핵심 부분인 점수 계산 로직을 맡게 되었다. 다트 게임의 점수 계산 로직은 아래와 같다.

다트 게임은 총 3번의 기회로 구성된다.
각 기회마다 얻을 수 있는 점수는 0점에서 10점까지이다.
점수와 함께 Single(S), Double(D), Triple(T) 영역이 존재하고 각 영역 당첨 시 점수에서 1제곱, 2제곱, 3제곱 (점수1 , 점수2 , 점수3 )으로 계산된다.
옵션으로 스타상(*) , 아차상(#)이 존재하며 스타상(*) 당첨 시 해당 점수와 바로 전에 얻은 점수를 각 2배로 만든다. 아차상(#) 당첨 시 해당 점수는 마이너스된다.
스타상(*)은 첫 번째 기회에서도 나올 수 있다. 이 경우 첫 번째 스타상(*)의 점수만 2배가 된다. (예제 4번 참고)
스타상(*)의 효과는 다른 스타상(*)의 효과와 중첩될 수 있다. 이 경우 중첩된 스타상(*) 점수는 4배가 된다. (예제 4번 참고)
스타상(*)의 효과는 아차상(#)의 효과와 중첩될 수 있다. 이 경우 중첩된 아차상(#)의 점수는 -2배가 된다. (예제 5번 참고)
Single(S), Double(D), Triple(T)은 점수마다 하나씩 존재한다.
스타상(*), 아차상(#)은 점수마다 둘 중 하나만 존재할 수 있으며, 존재하지 않을 수도 있다.
0~10의 정수와 문자 S, D, T, *, #로 구성된 문자열이 입력될 시 총점수를 반환하는 함수를 작성하라.

입력 형식
"점수|보너스|[옵션]"으로 이루어진 문자열 3세트.
예) 1S2D*3T

점수는 0에서 10 사이의 정수이다.
보너스는 S, D, T 중 하나이다.
옵선은 *이나 # 중 하나이며, 없을 수도 있다.
출력 형식
3번의 기회에서 얻은 점수 합계에 해당하는 정수값을 출력한다.
예) 37
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
class Solution {
    
    static List<String> list = new ArrayList<>();
    
    public int solution(String dartResult) {
        int answer = 0;
        getList(dartResult);
        System.out.println(list);
        int[] array = new int[list.size()];
        
        for(int i=0; i<list.size(); i++){
            String str = list.get(i);
            array[i] = calcSDT(str);
        }
        array[0] *= plusCalc(list.get(0));
        for(int i=1; i<list.size(); i++){
            String str = list.get(i);
            int a = plusCalc(str);
            if(a > 0){
                array[i-1] *= a;
                array[i] *= a;
            } else {
                array[i] *= a;
            }
        }
        for(int i=0; i<array.length; i++){
            answer += array[i];
        }
        return answer;
    }
    
    public static void getList(String dartResult){
        int index = 0;
        for(int i=0; i<dartResult.length(); i++){
            if(dartResult.charAt(i) == 'S' || dartResult.charAt(i) == 'D' || dartResult.charAt(i) == 'T'){
                if(i == dartResult.length()-1){
                    String temp = dartResult.substring(index, i+1);
                    list.add(temp);
                    index = i+1;
                } else if(dartResult.charAt(i+1) >= '0' && dartResult.charAt(i+1) <= '9') {
                    String temp = dartResult.substring(index, i+1);
                    list.add(temp);
                    index = i+1;
                } else {
                    String temp = dartResult.substring(index, i+2);
                    list.add(temp);
                    index = i+2;
                }
            }
        }
    }
    
    public static int calcSDT(String str){
        int score = 0;
        if(str.indexOf("S") >= 0){
            score = Integer.parseInt(str.substring(0, str.indexOf("S")));
        } else if(str.indexOf("D") >= 0){
            score = (int)Math.pow(Integer.parseInt(str.substring(0, str.indexOf("D"))),2);
        } else if(str.indexOf("T") >= 0){
            score = (int)Math.pow(Integer.parseInt(str.substring(0, str.indexOf("T"))),3);
        }
        return score;
    }
    
    public static int plusCalc(String str){
        if(str.indexOf("*") >= 0){
            return 2;
        } else if(str.indexOf("#") >= 0){
            return -1;
        } else {
            return 1;
        }
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;

class Solution {
    public int solution(String dartResult) {
        int answer = 0;
        
        int[] scoreArray = getScoreArray(dartResult);
        List<String> temp = getOthers(dartResult);
        String[] SDTArray = getSDTArray(temp);
        String[] specialArray = getSpecialArray(temp);

        scoreArray = calculate(scoreArray, SDTArray, specialArray);

        for(int i=0; i<scoreArray.length; i++){
            answer += scoreArray[i];
        }
        return answer;
    }
    
    public int[] calculate(int[] score, String[] SDT, String[] special){
        for(int i=0; i<SDT.length; i++){
            switch(SDT[i]){
                case "S" : score[i] = (int)Math.pow(score[i], 1);
                    break;
                case "D" : score[i] = (int)Math.pow(score[i], 2);
                    break;
                case "T" : score[i] = (int)Math.pow(score[i], 3);
                    break;
            }
        }
        if(special[0].equals("*")){
            score[0] *= 2;
        } else if(special[0].equals("#")){
            score[0] *= -1;
        }
        for(int i=1; i<special.length; i++){
            if(special[i].equals("*")){
                score[i-1] *= 2;
                score[i] *= 2;
            } else if(special[i].equals("#")){
                score[i] *= -1;
            }
        }
        return score;
    }
    
    public String[] getSpecialArray(List<String> list){
        String[] array = new String[list.size()];
        for(int i=0; i<list.size(); i++){
            if(list.get(i).length() == 2){
                array[i] = list.get(i).charAt(1) + "";
            } else {
                array[i] = "";
            }
        }
        return array;
    }
    
    public String[] getSDTArray(List<String> list){
        String[] array = new String[list.size()];
        for(int i=0; i<list.size(); i++){
            array[i] = list.get(i).charAt(0) + "";
        }
        return array;
    }
    
    public List<String> getOthers(String dartResult){
        List<String> list = new ArrayList<>();
        for(int i=0; i<dartResult.length(); i++){
            if(dartResult.charAt(i) == 'S' | dartResult.charAt(i) == 'D' | dartResult.charAt(i) == 'T'){
                if(i+1 < dartResult.length()){
                    if(dartResult.charAt(i+1) == '*'){
                        list.add(dartResult.charAt(i) + "*");
                    } else if(dartResult.charAt(i+1) == '#'){
                        list.add(dartResult.charAt(i) + "#");
                    } else {
                        list.add(Character.toString(dartResult.charAt(i)));
                    }
                } else {
                    list.add(Character.toString(dartResult.charAt(i)));
                }
            }
        }
        return list;
    }
    
    public int[] getScoreArray(String dartResult){
        String temp = dartResult.replace("*", "");
        temp = temp.replace("#", "");
        String[] tempArray = temp.split("[S,D,T]");
        int[] array = new int[tempArray.length];
        for(int i=0; i<array.length; i++){
            array[i] = Integer.parseInt(tempArray[i]);
        }
        return array;
    }
}
